name: Continuous Integration

on:
  push:
    branches:
      - main
  repository_dispatch:
  pull_request:
  release:
    types: [published]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test

    strategy:
      fail-fast: false
      matrix:
        node-version: [latest, 18, 20, 22]
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}
    permissions:
      # Required to put a comment on commit
      contents: write
      # Required to put a comment into the pull-request
      pull-requests: write

    steps:
      - name: Set git to use LF # Required to pass format check on Windows
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf

      - name: Checkout
        uses: actions/checkout@v5

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Format Check
        run: pnpm run format-check

      - name: ESLint Check
        run: pnpm run lint-check

      - name: TypeScript Check
        run: pnpm run type-check

      - name: Run Coverage
        run: pnpm run coverage

      - name: Report Coverage
        uses: davelosert/vitest-coverage-report-action@v2
        if: matrix.os == 'ubuntu-latest' && matrix.node-version == 'latest'
        with:
          comment-on: "pr,commit"

      - name: Build
        run: pnpm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: test-assets-${{ matrix.os }}-${{ matrix.node-version }}
          path: lib

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: https://registry.npmjs.org/
          node-version: lts/*
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        run: pnpm run build

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-assets
          path: lib

  publish-to-npm:
    name: Publish to npm
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    needs: [test, build]
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          registry-url: https://registry.npmjs.org/
          node-version: lts/*
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-assets
          path: lib

      - run: pnpm publish --provenance --no-git-checks --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  publish-to-github-release:
    name: Publish to GitHub Release
    if: github.event_name == 'release' && github.event.action == 'published'
    runs-on: ubuntu-latest
    needs: [test, build]
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-assets
          path: lib

      - name: Create lib.zip
        run: zip -r lib.zip lib/

      - name: Upload lib.zip to Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: lib.zip
